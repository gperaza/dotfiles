. ~/.set_colors

###############
# Who are we? #
###############
LP_COLOR_PATH=${BLUE}
LP_USER="${GREEN}\u${NO_COL}"
LP_HOST="${GREEN}@\h${NO_COL}"

######################
# GIT                #
######################
# Get the branch name of the current directory
_lp_git_branch()
{
    local branch

    if branch="$(\git symbolic-ref --short -q HEAD)"; then
        echo $branch
    else
        # In detached head state, use commit instead
        \git rev-parse --short -q HEAD
    fi
}

_lp_git_branch_color()
{
    \git rev-parse --is-inside-work-tree >/dev/null 2>&1 || return

    local gitstatus=$( LC_ALL=C git status  --porcelain )
    if [[ "$gitstatus" = "" ]]; then
        # Clean repo
        gitstatus="${GREEN}✔${NO_COL}"
    else
        gitstatus="${RED}✖${NO_COL}"
    fi

    local branch="$(_lp_git_branch)"
    local remote="$(\git config --get branch.${branch}.remote 2>/dev/null)"

    local commit_ahead
    local commit_behind
    if [[ -n "$remote" ]]; then
        local remote_branch
        remote_branch="$(\git config --get branch.${branch}.merge)"
        if [[ -n "$remote_branch" ]]; then
            remote_branch=${remote_branch/refs\/heads/refs\/remotes\/$remote}
            commit_ahead="$(\git rev-list --count $remote_branch..HEAD 2>/dev/null)"
            commit_behind="$(\git rev-list --count HEAD..$remote_branch 2>/dev/null)"
            if [[ "$commit_ahead" -ne "0" ]]; then
                gitstatus+="${PURPLE}↑${NO_COL}"
            fi
            if [[ "$commit_behind" -ne "0" ]]; then
                gitstatus+="${PURPLE}↓${NO_COL}"
            fi
        fi
    fi

    echo -nE "($branch $gitstatus)"
}


##########
# DESIGN #
##########
# insert a space on the right
_lp_sr()
{
    [[ -n "$1" ]] && echo -nE "$1 "
}

# insert a space on the left
_lp_sl()
{
    [[ -n "$1" ]] && echo -nE " $1"
}


########################
# Construct the prompt #
########################

# Shorten the path of the current working directory
PROMPT_DIRTRIM=1

_lp_set_prompt()
{
    PS1="┌─${LP_PS1_PREFIX}"

    # add user, host and permissions colon
    LP_PWD="${LP_COLOR_PATH}\W$NO_COL"
    PS1+="${LP_USER}${LP_HOST}:${LP_PWD}"

    # Add VCS infos
    LP_VCS="$(_lp_sl "$(_lp_git_branch_color)")"
    PS1+="${LP_VCS}"

    # add return code and prompt mark
    PS1+="\n└─>${NO_COL} "

}

# Activate Liquid Prompt
# Disable parameter/command expansion from PS1
#shopt -u promptvars
PROMPT_COMMAND=_lp_set_prompt
