# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

echo "Be not afraid of life. Believe that life is worth living and your belief will help create the fact. -- William James"

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"


# PS1='\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\n> '
. ~/.dotfiles/prompt.sh

# some more ls aliases
alias ls='exa'
alias ll='exa -alF'
alias la='exa -a'
alias l='exa -F'
alias ld='exa -d */'


function define {
    sdcv --color "$1" | less -r
}

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# added by Anaconda3 4.1.1 installer
export PATH="/home/gperaza/anaconda3/bin:$PATH"

export PATH="/home/gperaza/.dotfiles/scripts/:$PATH"

[ -f ~/.fzf.bash ] && source ~/.fzf.bash

####################
# Useful functions #
####################

# Generate a random integer between 0 and $1
function random() {
    echo $(($(od -N3 -An -i /dev/urandom) % ($1+1)))
}
